name: SonarCloud Analysis
on:
  workflow_call:
    inputs:
      java-version:
        required: false
        type: string
        default: '21'
      branch-name:
        required: false
        type: string
        default: 'main'
    secrets:
      SONAR_TOKEN:
        required: true
      SONAR_ORGANIZATION:
        required: true
      SONAR_PROJECT_KEY:
        required: true
jobs:
  sonarcloud:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Esto es importante para SonarCloud
      
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ inputs.java-version }}
          cache: maven
      
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      
      - name: Build, test, and analyze with SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
        run: |
          mvn clean verify site sonar:sonar \
            -Dsonar.organization=$SONAR_ORGANIZATION \
            -Dsonar.projectKey=$SONAR_PROJECT_KEY \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.branch.name=${{ inputs.branch-name }} \
            -Dsonar.token=$SONAR_TOKEN \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
      
      - name: Wait for SonarCloud Quality Gate
        run: |
          sleep 20
          SONAR_STATUS=$(curl -s -u $SONAR_TOKEN: "https://sonarcloud.io/api/qualitygates/project_status?projectKey=${{ secrets.SONAR_PROJECT_KEY }}" | jq -r .projectStatus.status)
          echo "SonarCloud Quality Gate Status: $SONAR_STATUS"
          if [[ "$SONAR_STATUS" != "OK" ]]; then
            echo "‚ùå Quality Gate failed. PR cannot be merged."
            exit 1
          fi
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      
      # Opcional: Guardar el sitio generado como artefacto
      - name: Archive site
        uses: actions/upload-artifact@v3
        with:
          name: maven-site
          path: target/site
